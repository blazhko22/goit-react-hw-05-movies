{"version":3,"file":"static/js/913.33899656.chunk.js","mappings":"2NACA,EAAwB,yB,SCIT,SAASA,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QAClC,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAASM,MAAK,SAAAC,GAAQ,OAAIJ,GAAQ,OAAII,EAASL,YAC3D,CAACF,KAGF,wBACGE,GACCA,EAAKM,KAAI,SAAAC,GACP,OACE,2BACE,gBAAKC,UAAWC,EAAhB,UACE,gBACEC,IACEH,EAAGI,aAAH,8CAC2CJ,EAAGI,cAC1C,4BAENC,IAAI,QAGR,uBAAIL,EAAGM,iBACP,uBAAIN,EAAGO,cAZAP,EAAGQ,W,8ECbT,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["webpack://react-homework-template/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"MovieCast_thumb__FtjSc\"};","import { fetchCredits } from '../../services/fetchMovies';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport s from './MovieCast.module.css';\n\nexport default function MovieCast({ movieId }) {\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCredits(movieId).then(response => setCast([...response.cast]));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast &&\n        cast.map(el => {\n          return (\n            <li key={el.id}>\n              <div className={s.thumb}>\n                <img\n                  src={\n                    el.profile_path\n                      ? `https://www.themoviedb.org/t/p/w1280${el.profile_path}`\n                      : 'http://dummyimage.com/100'\n                  }\n                  alt=\"\"\n                />\n              </div>\n              <p>{el.original_name}</p>\n              <p>{el.character}</p>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nMovieCast.propTypes = {\n  movieId: PropTypes.string,\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["MovieCast","movieId","useState","cast","setCast","useEffect","fetchCredits","then","response","map","el","className","s","src","profile_path","alt","original_name","character","id","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}