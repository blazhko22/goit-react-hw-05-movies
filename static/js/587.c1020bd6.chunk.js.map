{"version":3,"file":"static/js/587.c1020bd6.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACEC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IAAWG,MACjE,SAAAC,GAAQ,OAAIA,EAASC,WAFlB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,0FACEL,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,iCAC0DO,EAD1D,+BAEVJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAHvB,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,0FACEP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,oBAAoCT,EAApC,oBAA8DG,MACxE,SAAAC,GAAQ,OAAIA,EAASC,WAFlB,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,0FACEP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAHvB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,0FACEP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,2BAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAHvB,oE,yGC1BP,EAA8B,kCAA9B,EAAmF,uCAAnF,EAA8I,wC,SCoE9I,EAhEqB,WACnB,OAA0CO,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,UAAY,GAE1CC,EAAU,WACK,KAAfF,IAGJZ,EAAAA,EAAAA,IAAYY,GACTf,MAAK,SAACkB,GACLP,EAAiBO,EAAKC,cAK5BC,EAAAA,EAAAA,YAAU,WACW,KAAfL,IAGJZ,EAAAA,EAAAA,IAAYY,GACTf,MAAK,SAACkB,GACLP,GAAiB,kBAAMO,EAAKC,gBAE/B,CAACJ,IAYJ,OACE,iBAAKM,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXC,KAAK,OACLC,YAAY,sBACZC,SAhBe,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,MAAMC,OAAOC,QAAQ,MAAO,KAEjDlB,EADEc,EACc,CAAEA,MAAAA,GAEF,KAWdK,SAAUhB,KAEZ,mBAAQI,UAAWC,EAAqBY,QAASjB,EAAjD,UAA0D,uCAEvDP,EAAcyB,KAAI,SAACC,GAAD,OACjB,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKD,EAAM9B,IACbgC,MAAO,CACLC,KAAK,iBAAD,OAAmBxB,IAH3B,SAMGqB,EAAMI,kBAPFJ,EAAM9B,WCnDV,SAASmC,IACtB,OACE,+BACE,SAAC,EAAD","sources":["services/fetchMovies.js","webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.jsx","views/MoviesView.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd0d0c76743394dffaefbccf1872ae919';\n\nexport async function fetchTrending() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`).then(\n    response => response.json(),\n  );\n}\n\nexport async function fetchByName(query) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=true`,\n  ).then(response => response.json());\n}\n\nexport async function fetchById(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    response => response.json(),\n  );\n}\n\nexport async function fetchCredits(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n  ).then(response => response.json());\n}\n\nexport async function fetchReviews(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  ).then(response => response.json());\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_page\":\"SearchMovies_movies_page__4d3gQ\",\"searchForm_input\":\"SearchMovies_searchForm_input__GdGOz\",\"searchForm_button\":\"SearchMovies_searchForm_button__BPoXj\"};","import { useEffect, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { fetchByName } from '../../services/fetchMovies';\nimport s from './SearchMovies.module.css';\n\nconst SearchMovies = () => {\n  const [fetchedMovies, setFetchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams(\"\");\n  const searchTerm = searchParams.get(\"title\") || \"\";\n\n  const getData = () => {\n    if (searchTerm === \"\") {\n      return;\n    }\n    fetchByName(searchTerm)\n      .then((data) => {\n        setFetchedMovies(data.results);\n      })\n  };\n\n  \n  useEffect(() => {\n    if (searchTerm === \"\") {\n      return;\n    }\n    fetchByName(searchTerm)\n      .then((data) => {\n        setFetchedMovies(() => data.results);\n      })\n  }, [searchTerm]);\n\n  const handleFilter = (e) => {\n    e.preventDefault();\n    const title = e.target.value.trim().replace(/ +/g, ' ');\n    if (title) {\n      setSearchParams({ title });\n    } else {\n      setSearchParams({});\n    }\n  };\n\n  return (\n    <div className={s.movies_page}>\n      <input\n        className={s.searchForm_input}\n        type=\"text\"\n        placeholder=\"Search for movie...\"\n        onChange={handleFilter}\n        onSubmit={getData}\n      />\n      <button className={s.searchForm_button} onClick={getData}><span>Search</span></button>\n      \n        {fetchedMovies.map((movie) => (\n          <li key={movie.id}>\n            <Link\n              to={`${movie.id}`}\n              state={{\n                from: `/movies?title=${searchTerm}`\n              }}\n            >\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      \n    </div>\n  );\n};\n\nexport default SearchMovies;","import SearchMovies from '../components/SearchMovies/SearchMovies';\n\nexport default function MoviesView() {\n  return (\n    <>\n      <SearchMovies />\n    </>\n  );\n}"],"names":["BASE_URL","API_KEY","fetchTrending","fetch","then","response","json","fetchByName","query","fetchById","id","fetchCredits","fetchReviews","useState","fetchedMovies","setFetchedMovies","useSearchParams","searchParams","setSearchParams","searchTerm","get","getData","data","results","useEffect","className","s","type","placeholder","onChange","e","preventDefault","title","target","value","trim","replace","onSubmit","onClick","map","movie","to","state","from","original_title","MoviesView"],"sourceRoot":""}