{"version":3,"file":"static/js/779.dcba1561.chunk.js","mappings":"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","sources":["services/fetchMovies.js","components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx","webpack://react-homework-template/./src/views/MovieDetailsView.module.css?711e","views/MovieDetailsView.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd0d0c76743394dffaefbccf1872ae919';\n\nexport async function fetchTrending() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`).then(\n    response => response.json(),\n  );\n}\n\nexport async function fetchByName(query) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=true`,\n  ).then(response => response.json());\n}\n\nexport async function fetchById(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    response => response.json(),\n  );\n}\n\nexport async function fetchCredits(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n  ).then(response => response.json());\n}\n\nexport async function fetchReviews(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  ).then(response => response.json());\n}\n","import { fetchReviews } from '../../services/fetchMovies';\nimport { useState, useEffect } from 'react';\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(response => setReviews([...response.results]));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        reviews.map(el => {\n          return (\n            <li key={el.id}>\n              <h3>Author: {el.author}</h3>\n              <p>{el.content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"MovieCast_thumb__FtjSc\"};","import { fetchCredits } from '../../services/fetchMovies';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport s from './MovieCast.module.css';\n\nexport default function MovieCast({ movieId }) {\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCredits(movieId).then(response => setCast([...response.cast]));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast &&\n        cast.map(el => {\n          return (\n            <li key={el.id}>\n              <div className={s.thumb}>\n                <img\n                  src={\n                    el.profile_path\n                      ? `https://www.themoviedb.org/t/p/w1280${el.profile_path}`\n                      : 'http://dummyimage.com/100'\n                  }\n                  alt=\"\"\n                />\n              </div>\n              <p>{el.original_name}</p>\n              <p>{el.character}</p>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nMovieCast.propTypes = {\n  movieId: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"MovieDetailsView_thumb__ZuIX-\",\"button\":\"MovieDetailsView_button__b8T39\",\"info\":\"MovieDetailsView_info__E2hx+\",\"description\":\"MovieDetailsView_description__W5LbK\"};","import Reviews from '../components/Reviews/Reviews';\nimport MovieCast from '../components/MovieCast/MovieCast';\nimport { fetchById } from '../services/fetchMovies';\nimport { useParams, useNavigate, Routes } from 'react-router';\nimport { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Route } from 'react-router';\nimport s from './MovieDetailsView.module.css';\n\nexport default function MovieDetailsView() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchById(movieId).then(response => setMovieDetails(response));\n  }, [movieId]);\n\n  return (\n    <>\n      <div className={s.card}>\n        <button className={s.button} type=\"button\" onClick={() => navigate(-1)}>\n          {'<- Go beck'}\n        </button>\n        {movieDetails && (\n          <div className={s.info}>\n            <div className={s.thumb}>\n              <img src={`https://www.themoviedb.org/t/p/w1280${movieDetails.poster_path}`} alt=\"\" />\n            </div>\n            <div className={s.description}>\n              <h2>\n                {movieDetails.original_title} ({movieDetails.release_date.slice(0, 4)})\n              </h2>\n              <p>User score: {movieDetails.vote_average}</p>\n              <h3>Overview</h3>\n              <p>{movieDetails.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movieDetails.genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n      <ul>\n        <li>\n          <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n        </li>\n      </ul>\n\n      <Routes>\n        <Route path=\"cast\" element={<MovieCast movieId={movieId} />} />\n        <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n      </Routes>\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrending","fetch","then","response","json","fetchByName","query","fetchById","id","fetchCredits","fetchReviews","Reviews","movieId","useState","reviews","setReviews","useEffect","results","length","map","el","author","content","MovieCast","cast","setCast","className","s","src","profile_path","alt","original_name","character","MovieDetailsView","useParams","movieDetails","setMovieDetails","navigate","useNavigate","type","onClick","poster_path","original_title","release_date","slice","vote_average","overview","genres","genre","name","to","path","element"],"sourceRoot":""}