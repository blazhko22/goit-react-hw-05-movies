{"version":3,"file":"static/js/587.b51fb391.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,uGACEC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IAAWG,MACjE,SAAAC,GAAQ,OAAIA,EAASC,WAFlB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,0FACEL,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,iCAC0DO,EAD1D,+BAEVJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAHvB,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,0FACEP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,oBAAoCT,EAApC,oBAA8DG,MACxE,SAAAC,GAAQ,OAAIA,EAASC,WAFlB,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,0FACEP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,oBAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAHvB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,0FACEP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,2BAEVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAHvB,oE,yGC1BP,EAA8B,kCAA9B,EAAmF,uCAAnF,EAA8I,wC,SCoK9I,EAjDqB,WACnB,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMZ,EAAQW,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACRd,IACAD,EAAAA,EAAAA,IAAYC,GACPJ,MAAK,SAAAmB,GACJN,EAAgBM,EAAKC,YAEtBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,aAAcF,QAC7C,CAAClB,IAYJ,OACE,iBAAKqB,UAAWC,EAAhB,WACE,kBAAMC,SARa,SAAAC,GACrBA,EAAEC,iBACFb,EAAgB,CAAEZ,MAAOM,IACzBC,EAAS,KAKP,WACE,kBACEc,UAAWC,EACXI,YAAY,sBACZC,KAAK,OACLC,SAjBe,SAAAJ,GACrBjB,EAASiB,EAAEK,OAAOvB,QAgBcA,MAAOA,KACnC,mBAAQe,UAAWC,EAAqBK,KAAK,SAA7C,UAAsD,0CAGvDnB,GACCA,EAAasB,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgB7B,EAAS,EAATA,GAClC,OACE,yBACE,SAAC,KAAD,CAAM8B,GAAE,kBAAa9B,GAArB,SAA4B6B,KADrB7B,UC1JN,SAAS+B,IACtB,OACE,+BACE,SAAC,EAAD","sources":["services/fetchMovies.js","webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.jsx","views/MoviesView.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd0d0c76743394dffaefbccf1872ae919';\n\nexport async function fetchTrending() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`).then(\n    response => response.json(),\n  );\n}\n\nexport async function fetchByName(query) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=true`,\n  ).then(response => response.json());\n}\n\nexport async function fetchById(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    response => response.json(),\n  );\n}\n\nexport async function fetchCredits(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\n  ).then(response => response.json());\n}\n\nexport async function fetchReviews(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  ).then(response => response.json());\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_page\":\"SearchMovies_movies_page__4d3gQ\",\"searchForm_input\":\"SearchMovies_searchForm_input__GdGOz\",\"searchForm_button\":\"SearchMovies_searchForm_button__BPoXj\"};","// import { useEffect, useState } from \"react\";\n// import { Link, useSearchParams } from \"react-router-dom\";\n// import { fetchByName } from '../../services/fetchMovies';\n// import s from './SearchMovies.module.css';\n\n// const SearchMovies = () => {\n//   const [fetchedMovies, setFetchedMovies] = useState([]);\n//   const [searchParams, setSearchParams] = useSearchParams(\"\");\n//   const searchTerm = searchParams.get(\"title\") || \"\";\n\n//   const getData = () => {\n//     if (searchTerm === \"\") {\n//       return;\n//     }\n//     fetchByName(searchTerm)\n//       .then((data) => {\n//         setFetchedMovies(data.results);\n//       })\n//   };\n\n  \n//   useEffect(() => {\n//     if (searchTerm === \"\") {\n//       return;\n//     }\n//     fetchByName(searchTerm)\n//       .then((data) => {\n//         setFetchedMovies(() => data.results);\n//       })\n//   }, [searchTerm]);\n\n//   const handleFilter = (e) => {\n//     e.preventDefault();\n//     const title = e.target.value.trim().replace(/ +/g, ' ');\n//     if (title) {\n//       setSearchParams({ title });\n//     } else {\n//       setSearchParams({});\n//     }\n//   };\n\n//   return (\n//     <div className={s.movies_page}>\n//       <input\n//         className={s.searchForm_input}\n//         type=\"text\"\n//         placeholder=\"Search for movie...\"\n//         onChange={handleFilter}\n//         onSubmit={getData}\n//       />\n//       <button className={s.searchForm_button} onClick={getData}><span>Search</span></button>\n      \n//         {fetchedMovies.map((movie) => (\n//           <li key={movie.id}>\n//             <Link\n//               to={`${movie.id}`}\n//               state={{\n//                 from: `/movies?title=${searchTerm}`\n//               }}\n//             >\n//               {movie.original_title}\n//             </Link>\n//           </li>\n//         ))}\n      \n//     </div>\n//   );\n// };\n\n// export default SearchMovies;\n\n// import { fetchByName } from '../../services/fetchMovies';\n// import { Link } from 'react-router-dom';\n// import { useState, useEffect } from 'react';\n// import s from './SearchMovies.module.css';\n\n// export default function SearchMovies() {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [result, setResult] = useState(null);\n\n//   useEffect(() => {\n//     if (searchQuery) fetchByName(searchQuery).then(response => setResult([...response.results]));\n//   }, [searchQuery]);\n\n//   const formHandler = e => {\n//     e.preventDefault();\n\n//     setSearchQuery(e.target[0].value);\n\n//     e.target.reset();\n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={formHandler}>\n//         <input type=\"text\" className={s.input} />\n//         <button type=\"submit\" className={s.btn}></button>\n//       </form>\n\n//       {result &&\n//         result.map(({ original_title, id }) => {\n//           return (\n//             <li key={id}>\n//               <Link to={`/movies/${id}`}>{original_title}</Link>\n//             </li>\n//           );\n//         })}\n//     </>\n//   );\n// }\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { fetchByName } from '../../services/fetchMovies';\nimport s from './SearchMovies.module.css';\n\nconst SearchMovies = () => {\n  const [value, setValue] = useState('');\n  const [arrayOfFilms, setArrayOfFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    query &&\n    fetchByName(query)\n        .then(data => {        \n          setArrayOfFilms(data.results);\n        })\n        .catch(error => console.log('error :>> ', error));\n  }, [query]);\n\n  const onHandleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: value });\n    setValue('');\n  };\n  \n  return (\n    <div className={s.movies_page}>\n      <form onSubmit={onHandleSubmit}>\n        <input\n          className={s.searchForm_input}\n          placeholder=\"Search for movie...\" \n          type=\"text\" \n          onChange={onHandleChange} value={value} />\n        <button className={s.searchForm_button} type=\"submit\"><span>Search</span></button>\n      </form>\n      \n      {arrayOfFilms &&\n        arrayOfFilms.map(({ original_title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`}>{original_title}</Link>\n            </li>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default SearchMovies;","import SearchMovies from '../components/SearchMovies/SearchMovies';\n\nexport default function MoviesView() {\n  return (\n    <>\n      <SearchMovies />\n    </>\n  );\n}"],"names":["BASE_URL","API_KEY","fetchTrending","fetch","then","response","json","fetchByName","query","fetchById","id","fetchCredits","fetchReviews","useState","value","setValue","arrayOfFilms","setArrayOfFilms","useSearchParams","searchParams","setSearchParams","get","useEffect","data","results","catch","error","console","log","className","s","onSubmit","e","preventDefault","placeholder","type","onChange","target","map","original_title","to","MoviesView"],"sourceRoot":""}